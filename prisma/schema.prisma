// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  name             String?
  email            String             @unique
  emailVerified    DateTime?
  image            String?
  password         String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  accounts         Account[]
  sessions         Session[]
  profile          Profile?
  investments      Investment[]
  mortgageCalcs    MortgageCalc[]
  investmentCalcs  InvestmentCalc[]
  retirementCalcs  RetirementCalc[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Profile {
  id           String   @id @default(cuid())
  userId       String   @unique
  phoneNumber  String?
  address      String?
  preferences  Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Investment {
  id          String   @id @default(cuid())
  userId      String
  type        String
  amount      Float
  date        DateTime
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MortgageCalc {
  id             String   @id @default(cuid())
  userId         String
  principal      Float
  interestRate   Float
  loanTerm       Int
  downPayment    Float?
  monthlyPayment Float
  totalPayment   Float
  totalInterest  Float
  createdAt      DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InvestmentCalc {
  id                  String   @id @default(cuid())
  userId              String
  initialInvestment   Float
  monthlyContribution Float
  annualReturn        Float
  investmentLength    Int
  finalBalance        Float
  totalContributions  Float
  totalEarnings       Float
  createdAt          DateTime @default(now())
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model RetirementCalc {
  id                            String   @id @default(cuid())
  userId                        String
  currentAge                    Int
  retirementAge                 Int
  currentSavings               Float
  monthlyContribution          Float
  annualReturn                 Float
  desiredRetirementIncome      Float
  savingsAtRetirement          Float
  monthlyRetirementIncome      Float
  savingsGap                   Float
  additionalMonthlySavingsNeeded Float
  createdAt                    DateTime @default(now())
  user                         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}