// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

<<<<<<< HEAD
model GatedContentDownload {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  phoneNumber String
  contactMethod String
  interestedIn String[]
  pdfTitle   String
  downloadedAt DateTime @default(now())

  @@index([email])
  @@index([pdfTitle])
}

model MarketingConsent {
  id        String   @id @default(cuid())
  email     String   @unique
  optInMarketing Boolean @default(false)
  optInDate  DateTime @default(now())
=======
enum Role {
  USER
  ADMIN
  AGENT
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
>>>>>>> 2cf111364f7c46e4f08e582ede8aebf03360532b
}
