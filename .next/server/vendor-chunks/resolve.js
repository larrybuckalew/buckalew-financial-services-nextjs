"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/resolve";
exports.ids = ["vendor-chunks/resolve"];
exports.modules = {

/***/ "(instrument)/./node_modules/resolve/index.js":
/*!***************************************!*\
  !*** ./node_modules/resolve/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar async = __webpack_require__(/*! ./lib/async */ \"(instrument)/./node_modules/resolve/lib/async.js\");\nasync.core = __webpack_require__(/*! ./lib/core */ \"(instrument)/./node_modules/resolve/lib/core.js\");\nasync.isCore = __webpack_require__(/*! ./lib/is-core */ \"(instrument)/./node_modules/resolve/lib/is-core.js\");\nasync.sync = __webpack_require__(/*! ./lib/sync */ \"(instrument)/./node_modules/resolve/lib/sync.js\");\nmodule.exports = async;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxLQUFLLEdBQUdDLG1CQUFPLENBQUMscUVBQWEsQ0FBQztBQUNsQ0QsS0FBSyxDQUFDRSxJQUFJLEdBQUdELG1CQUFPLENBQUMsbUVBQVksQ0FBQztBQUNsQ0QsS0FBSyxDQUFDRyxNQUFNLEdBQUdGLG1CQUFPLENBQUMseUVBQWUsQ0FBQztBQUN2Q0QsS0FBSyxDQUFDSSxJQUFJLEdBQUdILG1CQUFPLENBQUMsbUVBQVksQ0FBQztBQUVsQ0ksTUFBTSxDQUFDQyxPQUFPLEdBQUdOLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWNrYWxldy1maW5hbmNpYWwtc2VydmljZXMvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS9pbmRleC5qcz83ZGY3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3luYyA9IHJlcXVpcmUoJy4vbGliL2FzeW5jJyk7XG5hc3luYy5jb3JlID0gcmVxdWlyZSgnLi9saWIvY29yZScpO1xuYXN5bmMuaXNDb3JlID0gcmVxdWlyZSgnLi9saWIvaXMtY29yZScpO1xuYXN5bmMuc3luYyA9IHJlcXVpcmUoJy4vbGliL3N5bmMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYztcbiJdLCJuYW1lcyI6WyJhc3luYyIsInJlcXVpcmUiLCJjb3JlIiwiaXNDb3JlIiwic3luYyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/index.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/async.js":
/*!*******************************************!*\
  !*** ./node_modules/resolve/lib/async.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar getHomedir = __webpack_require__(/*! ./homedir */ \"(instrument)/./node_modules/resolve/lib/homedir.js\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar caller = __webpack_require__(/*! ./caller */ \"(instrument)/./node_modules/resolve/lib/caller.js\");\nvar nodeModulesPaths = __webpack_require__(/*! ./node-modules-paths */ \"(instrument)/./node_modules/resolve/lib/node-modules-paths.js\");\nvar normalizeOptions = __webpack_require__(/*! ./normalize-options */ \"(instrument)/./node_modules/resolve/lib/normalize-options.js\");\nvar isCore = __webpack_require__(/*! is-core-module */ \"(instrument)/./node_modules/is-core-module/index.js\");\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n  return [path.join(homedir, '.node_modules'), path.join(homedir, '.node_libraries')];\n};\nvar defaultIsFile = function isFile(file, cb) {\n  fs.stat(file, function (err, stat) {\n    if (!err) {\n      return cb(null, stat.isFile() || stat.isFIFO());\n    }\n    if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n    return cb(err);\n  });\n};\nvar defaultIsDir = function isDirectory(dir, cb) {\n  fs.stat(dir, function (err, stat) {\n    if (!err) {\n      return cb(null, stat.isDirectory());\n    }\n    if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n    return cb(err);\n  });\n};\nvar defaultRealpath = function realpath(x, cb) {\n  realpathFS(x, function (realpathErr, realPath) {\n    if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);else cb(null, realpathErr ? x : realPath);\n  });\n};\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n  if (opts && opts.preserveSymlinks === false) {\n    realpath(x, cb);\n  } else {\n    cb(null, x);\n  }\n};\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n  readFile(pkgfile, function (readFileErr, body) {\n    if (readFileErr) cb(readFileErr);else {\n      try {\n        var pkg = JSON.parse(body);\n        cb(null, pkg);\n      } catch (jsonErr) {\n        cb(null);\n      }\n    }\n  });\n};\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n  var dirs = nodeModulesPaths(start, opts, x);\n  for (var i = 0; i < dirs.length; i++) {\n    dirs[i] = path.join(dirs[i], x);\n  }\n  return dirs;\n};\nmodule.exports = function resolve(x, options, callback) {\n  var cb = callback;\n  var opts = options;\n  if (typeof options === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof x !== 'string') {\n    var err = new TypeError('Path must be a string.');\n    return process.nextTick(function () {\n      cb(err);\n    });\n  }\n  opts = normalizeOptions(x, opts);\n  var isFile = opts.isFile || defaultIsFile;\n  var isDirectory = opts.isDirectory || defaultIsDir;\n  var readFile = opts.readFile || fs.readFile;\n  var realpath = opts.realpath || defaultRealpath;\n  var readPackage = opts.readPackage || defaultReadPackage;\n  if (opts.readFile && opts.readPackage) {\n    var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n    return process.nextTick(function () {\n      cb(conflictErr);\n    });\n  }\n  var packageIterator = opts.packageIterator;\n  var extensions = opts.extensions || ['.js'];\n  var includeCoreModules = opts.includeCoreModules !== false;\n  var basedir = opts.basedir || path.dirname(caller());\n  var parent = opts.filename || basedir;\n  opts.paths = opts.paths || defaultPaths();\n\n  // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n  var absoluteStart = path.resolve(basedir);\n  maybeRealpath(realpath, absoluteStart, opts, function (err, realStart) {\n    if (err) cb(err);else init(realStart);\n  });\n  var res;\n  function init(basedir) {\n    if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)) {\n      res = path.resolve(basedir, x);\n      if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n      if (/\\/$/.test(x) && res === basedir) {\n        loadAsDirectory(res, opts.package, onfile);\n      } else loadAsFile(res, opts.package, onfile);\n    } else if (includeCoreModules && isCore(x)) {\n      return cb(null, x);\n    } else loadNodeModules(x, basedir, function (err, n, pkg) {\n      if (err) cb(err);else if (n) {\n        return maybeRealpath(realpath, n, opts, function (err, realN) {\n          if (err) {\n            cb(err);\n          } else {\n            cb(null, realN, pkg);\n          }\n        });\n      } else {\n        var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n        moduleError.code = 'MODULE_NOT_FOUND';\n        cb(moduleError);\n      }\n    });\n  }\n  function onfile(err, m, pkg) {\n    if (err) cb(err);else if (m) cb(null, m, pkg);else loadAsDirectory(res, function (err, d, pkg) {\n      if (err) cb(err);else if (d) {\n        maybeRealpath(realpath, d, opts, function (err, realD) {\n          if (err) {\n            cb(err);\n          } else {\n            cb(null, realD, pkg);\n          }\n        });\n      } else {\n        var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n        moduleError.code = 'MODULE_NOT_FOUND';\n        cb(moduleError);\n      }\n    });\n  }\n  function loadAsFile(x, thePackage, callback) {\n    var loadAsFilePackage = thePackage;\n    var cb = callback;\n    if (typeof loadAsFilePackage === 'function') {\n      cb = loadAsFilePackage;\n      loadAsFilePackage = undefined;\n    }\n    var exts = [''].concat(extensions);\n    load(exts, x, loadAsFilePackage);\n    function load(exts, x, loadPackage) {\n      if (exts.length === 0) return cb(null, undefined, loadPackage);\n      var file = x + exts[0];\n      var pkg = loadPackage;\n      if (pkg) onpkg(null, pkg);else loadpkg(path.dirname(file), onpkg);\n      function onpkg(err, pkg_, dir) {\n        pkg = pkg_;\n        if (err) return cb(err);\n        if (dir && pkg && opts.pathFilter) {\n          var rfile = path.relative(dir, file);\n          var rel = rfile.slice(0, rfile.length - exts[0].length);\n          var r = opts.pathFilter(pkg, x, rel);\n          if (r) return load([''].concat(extensions.slice()), path.resolve(dir, r), pkg);\n        }\n        isFile(file, onex);\n      }\n      function onex(err, ex) {\n        if (err) return cb(err);\n        if (ex) return cb(null, file, pkg);\n        load(exts.slice(1), x, pkg);\n      }\n    }\n  }\n  function loadpkg(dir, cb) {\n    if (dir === '' || dir === '/') return cb(null);\n    if (process.platform === 'win32' && /^\\w:[/\\\\]*$/.test(dir)) {\n      return cb(null);\n    }\n    if (/[/\\\\]node_modules[/\\\\]*$/.test(dir)) return cb(null);\n    maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n      if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n      var pkgfile = path.join(pkgdir, 'package.json');\n      isFile(pkgfile, function (err, ex) {\n        // on err, ex is false\n        if (!ex) return loadpkg(path.dirname(dir), cb);\n        readPackage(readFile, pkgfile, function (err, pkgParam) {\n          if (err) cb(err);\n          var pkg = pkgParam;\n          if (pkg && opts.packageFilter) {\n            pkg = opts.packageFilter(pkg, pkgfile);\n          }\n          cb(null, pkg, dir);\n        });\n      });\n    });\n  }\n  function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n    var cb = callback;\n    var fpkg = loadAsDirectoryPackage;\n    if (typeof fpkg === 'function') {\n      cb = fpkg;\n      fpkg = opts.package;\n    }\n    maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n      if (unwrapErr) return cb(unwrapErr);\n      var pkgfile = path.join(pkgdir, 'package.json');\n      isFile(pkgfile, function (err, ex) {\n        if (err) return cb(err);\n        if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n        readPackage(readFile, pkgfile, function (err, pkgParam) {\n          if (err) return cb(err);\n          var pkg = pkgParam;\n          if (pkg && opts.packageFilter) {\n            pkg = opts.packageFilter(pkg, pkgfile);\n          }\n          if (pkg && pkg.main) {\n            if (typeof pkg.main !== 'string') {\n              var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n              mainError.code = 'INVALID_PACKAGE_MAIN';\n              return cb(mainError);\n            }\n            if (pkg.main === '.' || pkg.main === './') {\n              pkg.main = 'index';\n            }\n            loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n              if (err) return cb(err);\n              if (m) return cb(null, m, pkg);\n              if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n              var dir = path.resolve(x, pkg.main);\n              loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                if (err) return cb(err);\n                if (n) return cb(null, n, pkg);\n                loadAsFile(path.join(x, 'index'), pkg, cb);\n              });\n            });\n            return;\n          }\n          loadAsFile(path.join(x, '/index'), pkg, cb);\n        });\n      });\n    });\n  }\n  function processDirs(cb, dirs) {\n    if (dirs.length === 0) return cb(null, undefined);\n    var dir = dirs[0];\n    isDirectory(path.dirname(dir), isdir);\n    function isdir(err, isdir) {\n      if (err) return cb(err);\n      if (!isdir) return processDirs(cb, dirs.slice(1));\n      loadAsFile(dir, opts.package, onfile);\n    }\n    function onfile(err, m, pkg) {\n      if (err) return cb(err);\n      if (m) return cb(null, m, pkg);\n      loadAsDirectory(dir, opts.package, ondir);\n    }\n    function ondir(err, n, pkg) {\n      if (err) return cb(err);\n      if (n) return cb(null, n, pkg);\n      processDirs(cb, dirs.slice(1));\n    }\n  }\n  function loadNodeModules(x, start, cb) {\n    var thunk = function () {\n      return getPackageCandidates(x, start, opts);\n    };\n    processDirs(cb, packageIterator ? packageIterator(x, start, thunk, opts) : thunk());\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/async.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/caller.js":
/*!********************************************!*\
  !*** ./node_modules/resolve/lib/caller.js ***!
  \********************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function () {\n  // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n  var origPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = function (_, stack) {\n    return stack;\n  };\n  var stack = new Error().stack;\n  Error.prepareStackTrace = origPrepareStackTrace;\n  return stack[2].getFileName();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2NhbGxlci5qcyIsIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQU8sR0FBRyxZQUFZO0VBQ3pCO0VBQ0EsSUFBSUMscUJBQXFCLEdBQUdDLEtBQUssQ0FBQ0MsaUJBQWlCO0VBQ25ERCxLQUFLLENBQUNDLGlCQUFpQixHQUFHLFVBQVVDLENBQUMsRUFBRUMsS0FBSyxFQUFFO0lBQUUsT0FBT0EsS0FBSztFQUFFLENBQUM7RUFDL0QsSUFBSUEsS0FBSyxHQUFJLElBQUlILEtBQUssQ0FBQyxDQUFDLENBQUVHLEtBQUs7RUFDL0JILEtBQUssQ0FBQ0MsaUJBQWlCLEdBQUdGLHFCQUFxQjtFQUMvQyxPQUFPSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0FBQ2pDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWNrYWxldy1maW5hbmNpYWwtc2VydmljZXMvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS9saWIvY2FsbGVyLmpzP2ZiMGYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy8gc2VlIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3Avdjgvd2lraS9KYXZhU2NyaXB0U3RhY2tUcmFjZUFwaVxuICAgIHZhciBvcmlnUHJlcGFyZVN0YWNrVHJhY2UgPSBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZTtcbiAgICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IGZ1bmN0aW9uIChfLCBzdGFjaykgeyByZXR1cm4gc3RhY2s7IH07XG4gICAgdmFyIHN0YWNrID0gKG5ldyBFcnJvcigpKS5zdGFjaztcbiAgICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IG9yaWdQcmVwYXJlU3RhY2tUcmFjZTtcbiAgICByZXR1cm4gc3RhY2tbMl0uZ2V0RmlsZU5hbWUoKTtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm9yaWdQcmVwYXJlU3RhY2tUcmFjZSIsIkVycm9yIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJfIiwic3RhY2siLCJnZXRGaWxlTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/caller.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/core.js":
/*!******************************************!*\
  !*** ./node_modules/resolve/lib/core.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isCoreModule = __webpack_require__(/*! is-core-module */ \"(instrument)/./node_modules/is-core-module/index.js\");\nvar data = __webpack_require__(/*! ./core.json */ \"(instrument)/./node_modules/resolve/lib/core.json\");\nvar core = {};\nfor (var mod in data) {\n  // eslint-disable-line no-restricted-syntax\n  if (Object.prototype.hasOwnProperty.call(data, mod)) {\n    core[mod] = isCoreModule(mod);\n  }\n}\nmodule.exports = core;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2NvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSUEsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLDJFQUFnQixDQUFDO0FBQzVDLElBQUlDLElBQUksR0FBR0QsbUJBQU8sQ0FBQyxzRUFBYSxDQUFDO0FBRWpDLElBQUlFLElBQUksR0FBRyxDQUFDLENBQUM7QUFDYixLQUFLLElBQUlDLEdBQUcsSUFBSUYsSUFBSSxFQUFFO0VBQUU7RUFDcEIsSUFBSUcsTUFBTSxDQUFDQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDTixJQUFJLEVBQUVFLEdBQUcsQ0FBQyxFQUFFO0lBQ2pERCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHSixZQUFZLENBQUNJLEdBQUcsQ0FBQztFQUNqQztBQUNKO0FBQ0FLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUCxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVja2FsZXctZmluYW5jaWFsLXNlcnZpY2VzLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2NvcmUuanM/ODIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0NvcmVNb2R1bGUgPSByZXF1aXJlKCdpcy1jb3JlLW1vZHVsZScpO1xudmFyIGRhdGEgPSByZXF1aXJlKCcuL2NvcmUuanNvbicpO1xuXG52YXIgY29yZSA9IHt9O1xuZm9yICh2YXIgbW9kIGluIGRhdGEpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZGF0YSwgbW9kKSkge1xuICAgICAgICBjb3JlW21vZF0gPSBpc0NvcmVNb2R1bGUobW9kKTtcbiAgICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGNvcmU7XG4iXSwibmFtZXMiOlsiaXNDb3JlTW9kdWxlIiwicmVxdWlyZSIsImRhdGEiLCJjb3JlIiwibW9kIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/core.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/homedir.js":
/*!*********************************************!*\
  !*** ./node_modules/resolve/lib/homedir.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar os = __webpack_require__(/*! os */ \"os\");\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n  var home = process.env.HOME;\n  var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n  if (process.platform === 'win32') {\n    return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n  }\n  if (process.platform === 'darwin') {\n    return home || (user ? '/Users/' + user : null);\n  }\n  if (process.platform === 'linux') {\n    return home || (process.getuid() === 0 ? '/root' : user ? '/home/' + user : null); // eslint-disable-line no-extra-parens\n  }\n\n  return home || null;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2hvbWVkaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSUEsRUFBRSxHQUFHQyxtQkFBTyxDQUFDLGNBQUksQ0FBQzs7QUFFdEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHSCxFQUFFLENBQUNJLE9BQU8sSUFBSSxTQUFTQSxPQUFPQSxDQUFBLEVBQUc7RUFDOUMsSUFBSUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSTtFQUMzQixJQUFJQyxJQUFJLEdBQUdILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRyxPQUFPLElBQUlKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxJQUFJLElBQUlMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSyxLQUFLLElBQUlOLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTSxRQUFRO0VBRS9GLElBQUlQLE9BQU8sQ0FBQ1EsUUFBUSxLQUFLLE9BQU8sRUFBRTtJQUM5QixPQUFPUixPQUFPLENBQUNDLEdBQUcsQ0FBQ1EsV0FBVyxJQUFJVCxPQUFPLENBQUNDLEdBQUcsQ0FBQ1MsU0FBUyxHQUFHVixPQUFPLENBQUNDLEdBQUcsQ0FBQ1UsUUFBUSxJQUFJWixJQUFJLElBQUksSUFBSTtFQUNsRztFQUVBLElBQUlDLE9BQU8sQ0FBQ1EsUUFBUSxLQUFLLFFBQVEsRUFBRTtJQUMvQixPQUFPVCxJQUFJLEtBQUtJLElBQUksR0FBRyxTQUFTLEdBQUdBLElBQUksR0FBRyxJQUFJLENBQUM7RUFDbkQ7RUFFQSxJQUFJSCxPQUFPLENBQUNRLFFBQVEsS0FBSyxPQUFPLEVBQUU7SUFDOUIsT0FBT1QsSUFBSSxLQUFLQyxPQUFPLENBQUNZLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sR0FBSVQsSUFBSSxHQUFHLFFBQVEsR0FBR0EsSUFBSSxHQUFHLElBQUssQ0FBQyxDQUFDLENBQUM7RUFDekY7O0VBRUEsT0FBT0osSUFBSSxJQUFJLElBQUk7QUFDdkIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2J1Y2thbGV3LWZpbmFuY2lhbC1zZXJ2aWNlcy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlL2xpYi9ob21lZGlyLmpzPzhhOGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgb3MgPSByZXF1aXJlKCdvcycpO1xuXG4vLyBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9vcy1ob21lZGlyL2Jsb2IvMTFlMDg5ZjQ3NTRkYjM4YmI1MzVlNWE4NDE2MzIwYzQ0NDZlOGNmZC9pbmRleC5qc1xuXG5tb2R1bGUuZXhwb3J0cyA9IG9zLmhvbWVkaXIgfHwgZnVuY3Rpb24gaG9tZWRpcigpIHtcbiAgICB2YXIgaG9tZSA9IHByb2Nlc3MuZW52LkhPTUU7XG4gICAgdmFyIHVzZXIgPSBwcm9jZXNzLmVudi5MT0dOQU1FIHx8IHByb2Nlc3MuZW52LlVTRVIgfHwgcHJvY2Vzcy5lbnYuTE5BTUUgfHwgcHJvY2Vzcy5lbnYuVVNFUk5BTUU7XG5cbiAgICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJykge1xuICAgICAgICByZXR1cm4gcHJvY2Vzcy5lbnYuVVNFUlBST0ZJTEUgfHwgcHJvY2Vzcy5lbnYuSE9NRURSSVZFICsgcHJvY2Vzcy5lbnYuSE9NRVBBVEggfHwgaG9tZSB8fCBudWxsO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnZGFyd2luJykge1xuICAgICAgICByZXR1cm4gaG9tZSB8fCAodXNlciA/ICcvVXNlcnMvJyArIHVzZXIgOiBudWxsKTtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ2xpbnV4Jykge1xuICAgICAgICByZXR1cm4gaG9tZSB8fCAocHJvY2Vzcy5nZXR1aWQoKSA9PT0gMCA/ICcvcm9vdCcgOiAodXNlciA/ICcvaG9tZS8nICsgdXNlciA6IG51bGwpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1leHRyYS1wYXJlbnNcbiAgICB9XG5cbiAgICByZXR1cm4gaG9tZSB8fCBudWxsO1xufTtcbiJdLCJuYW1lcyI6WyJvcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaG9tZWRpciIsImhvbWUiLCJwcm9jZXNzIiwiZW52IiwiSE9NRSIsInVzZXIiLCJMT0dOQU1FIiwiVVNFUiIsIkxOQU1FIiwiVVNFUk5BTUUiLCJwbGF0Zm9ybSIsIlVTRVJQUk9GSUxFIiwiSE9NRURSSVZFIiwiSE9NRVBBVEgiLCJnZXR1aWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/homedir.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/is-core.js":
/*!*********************************************!*\
  !*** ./node_modules/resolve/lib/is-core.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isCoreModule = __webpack_require__(/*! is-core-module */ \"(instrument)/./node_modules/is-core-module/index.js\");\nmodule.exports = function isCore(x) {\n  return isCoreModule(x);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2lzLWNvcmUuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxZQUFZLEdBQUdDLG1CQUFPLENBQUMsMkVBQWdCLENBQUM7QUFFNUNDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFNBQVNDLE1BQU1BLENBQUNDLENBQUMsRUFBRTtFQUNoQyxPQUFPTCxZQUFZLENBQUNLLENBQUMsQ0FBQztBQUMxQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnVja2FsZXctZmluYW5jaWFsLXNlcnZpY2VzLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL2lzLWNvcmUuanM/NjU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNDb3JlTW9kdWxlID0gcmVxdWlyZSgnaXMtY29yZS1tb2R1bGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NvcmUoeCkge1xuICAgIHJldHVybiBpc0NvcmVNb2R1bGUoeCk7XG59O1xuIl0sIm5hbWVzIjpbImlzQ29yZU1vZHVsZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNDb3JlIiwieCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/is-core.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/node-modules-paths.js":
/*!********************************************************!*\
  !*** ./node_modules/resolve/lib/node-modules-paths.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar path = __webpack_require__(/*! path */ \"path\");\nvar parse = path.parse || __webpack_require__(/*! path-parse */ \"(instrument)/./node_modules/path-parse/index.js\"); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n  var prefix = '/';\n  if (/^([A-Za-z]:)/.test(absoluteStart)) {\n    prefix = '';\n  } else if (/^\\\\\\\\/.test(absoluteStart)) {\n    prefix = '\\\\\\\\';\n  }\n  var paths = [absoluteStart];\n  var parsed = parse(absoluteStart);\n  while (parsed.dir !== paths[paths.length - 1]) {\n    paths.push(parsed.dir);\n    parsed = parse(parsed.dir);\n  }\n  return paths.reduce(function (dirs, aPath) {\n    return dirs.concat(modules.map(function (moduleDir) {\n      return path.resolve(prefix, aPath, moduleDir);\n    }));\n  }, []);\n};\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n  var modules = opts && opts.moduleDirectory ? [].concat(opts.moduleDirectory) : ['node_modules'];\n  if (opts && typeof opts.paths === 'function') {\n    return opts.paths(request, start, function () {\n      return getNodeModulesDirs(start, modules);\n    }, opts);\n  }\n  var dirs = getNodeModulesDirs(start, modules);\n  return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL25vZGUtbW9kdWxlcy1wYXRocy5qcyIsIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLElBQUksR0FBR0MsbUJBQU8sQ0FBQyxrQkFBTSxDQUFDO0FBQzFCLElBQUlDLEtBQUssR0FBR0YsSUFBSSxDQUFDRSxLQUFLLElBQUlELG1CQUFPLENBQUMsbUVBQVksQ0FBQyxDQUFDLENBQUM7O0FBRWpELElBQUlFLGtCQUFrQixHQUFHLFNBQVNBLGtCQUFrQkEsQ0FBQ0MsYUFBYSxFQUFFQyxPQUFPLEVBQUU7RUFDekUsSUFBSUMsTUFBTSxHQUFHLEdBQUc7RUFDaEIsSUFBSyxjQUFjLENBQUVDLElBQUksQ0FBQ0gsYUFBYSxDQUFDLEVBQUU7SUFDdENFLE1BQU0sR0FBRyxFQUFFO0VBQ2YsQ0FBQyxNQUFNLElBQUssT0FBTyxDQUFFQyxJQUFJLENBQUNILGFBQWEsQ0FBQyxFQUFFO0lBQ3RDRSxNQUFNLEdBQUcsTUFBTTtFQUNuQjtFQUVBLElBQUlFLEtBQUssR0FBRyxDQUFDSixhQUFhLENBQUM7RUFDM0IsSUFBSUssTUFBTSxHQUFHUCxLQUFLLENBQUNFLGFBQWEsQ0FBQztFQUNqQyxPQUFPSyxNQUFNLENBQUNDLEdBQUcsS0FBS0YsS0FBSyxDQUFDQSxLQUFLLENBQUNHLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRTtJQUMzQ0gsS0FBSyxDQUFDSSxJQUFJLENBQUNILE1BQU0sQ0FBQ0MsR0FBRyxDQUFDO0lBQ3RCRCxNQUFNLEdBQUdQLEtBQUssQ0FBQ08sTUFBTSxDQUFDQyxHQUFHLENBQUM7RUFDOUI7RUFFQSxPQUFPRixLQUFLLENBQUNLLE1BQU0sQ0FBQyxVQUFVQyxJQUFJLEVBQUVDLEtBQUssRUFBRTtJQUN2QyxPQUFPRCxJQUFJLENBQUNFLE1BQU0sQ0FBQ1gsT0FBTyxDQUFDWSxHQUFHLENBQUMsVUFBVUMsU0FBUyxFQUFFO01BQ2hELE9BQU9sQixJQUFJLENBQUNtQixPQUFPLENBQUNiLE1BQU0sRUFBRVMsS0FBSyxFQUFFRyxTQUFTLENBQUM7SUFDakQsQ0FBQyxDQUFDLENBQUM7RUFDUCxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ1YsQ0FBQztBQUVERSxNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxnQkFBZ0JBLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7RUFDN0QsSUFBSXBCLE9BQU8sR0FBR21CLElBQUksSUFBSUEsSUFBSSxDQUFDRSxlQUFlLEdBQ3BDLEVBQUUsQ0FBQ1YsTUFBTSxDQUFDUSxJQUFJLENBQUNFLGVBQWUsQ0FBQyxHQUMvQixDQUFDLGNBQWMsQ0FBQztFQUV0QixJQUFJRixJQUFJLElBQUksT0FBT0EsSUFBSSxDQUFDaEIsS0FBSyxLQUFLLFVBQVUsRUFBRTtJQUMxQyxPQUFPZ0IsSUFBSSxDQUFDaEIsS0FBSyxDQUNiaUIsT0FBTyxFQUNQRixLQUFLLEVBQ0wsWUFBWTtNQUFFLE9BQU9wQixrQkFBa0IsQ0FBQ29CLEtBQUssRUFBRWxCLE9BQU8sQ0FBQztJQUFFLENBQUMsRUFDMURtQixJQUNKLENBQUM7RUFDTDtFQUVBLElBQUlWLElBQUksR0FBR1gsa0JBQWtCLENBQUNvQixLQUFLLEVBQUVsQixPQUFPLENBQUM7RUFDN0MsT0FBT21CLElBQUksSUFBSUEsSUFBSSxDQUFDaEIsS0FBSyxHQUFHTSxJQUFJLENBQUNFLE1BQU0sQ0FBQ1EsSUFBSSxDQUFDaEIsS0FBSyxDQUFDLEdBQUdNLElBQUk7QUFDOUQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2J1Y2thbGV3LWZpbmFuY2lhbC1zZXJ2aWNlcy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlL2xpYi9ub2RlLW1vZHVsZXMtcGF0aHMuanM/YWQ3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBwYXJzZSA9IHBhdGgucGFyc2UgfHwgcmVxdWlyZSgncGF0aC1wYXJzZScpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGdsb2JhbC1yZXF1aXJlXG5cbnZhciBnZXROb2RlTW9kdWxlc0RpcnMgPSBmdW5jdGlvbiBnZXROb2RlTW9kdWxlc0RpcnMoYWJzb2x1dGVTdGFydCwgbW9kdWxlcykge1xuICAgIHZhciBwcmVmaXggPSAnLyc7XG4gICAgaWYgKCgvXihbQS1aYS16XTopLykudGVzdChhYnNvbHV0ZVN0YXJ0KSkge1xuICAgICAgICBwcmVmaXggPSAnJztcbiAgICB9IGVsc2UgaWYgKCgvXlxcXFxcXFxcLykudGVzdChhYnNvbHV0ZVN0YXJ0KSkge1xuICAgICAgICBwcmVmaXggPSAnXFxcXFxcXFwnO1xuICAgIH1cblxuICAgIHZhciBwYXRocyA9IFthYnNvbHV0ZVN0YXJ0XTtcbiAgICB2YXIgcGFyc2VkID0gcGFyc2UoYWJzb2x1dGVTdGFydCk7XG4gICAgd2hpbGUgKHBhcnNlZC5kaXIgIT09IHBhdGhzW3BhdGhzLmxlbmd0aCAtIDFdKSB7XG4gICAgICAgIHBhdGhzLnB1c2gocGFyc2VkLmRpcik7XG4gICAgICAgIHBhcnNlZCA9IHBhcnNlKHBhcnNlZC5kaXIpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKGRpcnMsIGFQYXRoKSB7XG4gICAgICAgIHJldHVybiBkaXJzLmNvbmNhdChtb2R1bGVzLm1hcChmdW5jdGlvbiAobW9kdWxlRGlyKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aC5yZXNvbHZlKHByZWZpeCwgYVBhdGgsIG1vZHVsZURpcik7XG4gICAgICAgIH0pKTtcbiAgICB9LCBbXSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vZGVNb2R1bGVzUGF0aHMoc3RhcnQsIG9wdHMsIHJlcXVlc3QpIHtcbiAgICB2YXIgbW9kdWxlcyA9IG9wdHMgJiYgb3B0cy5tb2R1bGVEaXJlY3RvcnlcbiAgICAgICAgPyBbXS5jb25jYXQob3B0cy5tb2R1bGVEaXJlY3RvcnkpXG4gICAgICAgIDogWydub2RlX21vZHVsZXMnXTtcblxuICAgIGlmIChvcHRzICYmIHR5cGVvZiBvcHRzLnBhdGhzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBvcHRzLnBhdGhzKFxuICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2V0Tm9kZU1vZHVsZXNEaXJzKHN0YXJ0LCBtb2R1bGVzKTsgfSxcbiAgICAgICAgICAgIG9wdHNcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgZGlycyA9IGdldE5vZGVNb2R1bGVzRGlycyhzdGFydCwgbW9kdWxlcyk7XG4gICAgcmV0dXJuIG9wdHMgJiYgb3B0cy5wYXRocyA/IGRpcnMuY29uY2F0KG9wdHMucGF0aHMpIDogZGlycztcbn07XG4iXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJwYXJzZSIsImdldE5vZGVNb2R1bGVzRGlycyIsImFic29sdXRlU3RhcnQiLCJtb2R1bGVzIiwicHJlZml4IiwidGVzdCIsInBhdGhzIiwicGFyc2VkIiwiZGlyIiwibGVuZ3RoIiwicHVzaCIsInJlZHVjZSIsImRpcnMiLCJhUGF0aCIsImNvbmNhdCIsIm1hcCIsIm1vZHVsZURpciIsInJlc29sdmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibm9kZU1vZHVsZXNQYXRocyIsInN0YXJ0Iiwib3B0cyIsInJlcXVlc3QiLCJtb2R1bGVEaXJlY3RvcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/node-modules-paths.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/normalize-options.js":
/*!*******************************************************!*\
  !*** ./node_modules/resolve/lib/normalize-options.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (x, opts) {\n  /**\n   * This file is purposefully a passthrough. It's expected that third-party\n   * environments will override it at runtime in order to inject special logic\n   * into `resolve` (by manipulating the options). One such example is the PnP\n   * code path in Yarn.\n   */\n\n  return opts || {};\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUvbGliL25vcm1hbGl6ZS1vcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFVBQVVDLENBQUMsRUFBRUMsSUFBSSxFQUFFO0VBQ2hDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7RUFFSSxPQUFPQSxJQUFJLElBQUksQ0FBQyxDQUFDO0FBQ3JCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9idWNrYWxldy1maW5hbmNpYWwtc2VydmljZXMvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS9saWIvbm9ybWFsaXplLW9wdGlvbnMuanM/MmM2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh4LCBvcHRzKSB7XG4gICAgLyoqXG4gICAgICogVGhpcyBmaWxlIGlzIHB1cnBvc2VmdWxseSBhIHBhc3N0aHJvdWdoLiBJdCdzIGV4cGVjdGVkIHRoYXQgdGhpcmQtcGFydHlcbiAgICAgKiBlbnZpcm9ubWVudHMgd2lsbCBvdmVycmlkZSBpdCBhdCBydW50aW1lIGluIG9yZGVyIHRvIGluamVjdCBzcGVjaWFsIGxvZ2ljXG4gICAgICogaW50byBgcmVzb2x2ZWAgKGJ5IG1hbmlwdWxhdGluZyB0aGUgb3B0aW9ucykuIE9uZSBzdWNoIGV4YW1wbGUgaXMgdGhlIFBuUFxuICAgICAqIGNvZGUgcGF0aCBpbiBZYXJuLlxuICAgICAqL1xuXG4gICAgcmV0dXJuIG9wdHMgfHwge307XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ4Iiwib3B0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/normalize-options.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/sync.js":
/*!******************************************!*\
  !*** ./node_modules/resolve/lib/sync.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isCore = __webpack_require__(/*! is-core-module */ \"(instrument)/./node_modules/is-core-module/index.js\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar getHomedir = __webpack_require__(/*! ./homedir */ \"(instrument)/./node_modules/resolve/lib/homedir.js\");\nvar caller = __webpack_require__(/*! ./caller */ \"(instrument)/./node_modules/resolve/lib/caller.js\");\nvar nodeModulesPaths = __webpack_require__(/*! ./node-modules-paths */ \"(instrument)/./node_modules/resolve/lib/node-modules-paths.js\");\nvar normalizeOptions = __webpack_require__(/*! ./normalize-options */ \"(instrument)/./node_modules/resolve/lib/normalize-options.js\");\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n  return [path.join(homedir, '.node_modules'), path.join(homedir, '.node_libraries')];\n};\nvar defaultIsFile = function isFile(file) {\n  try {\n    var stat = fs.statSync(file, {\n      throwIfNoEntry: false\n    });\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n  return !!stat && (stat.isFile() || stat.isFIFO());\n};\nvar defaultIsDir = function isDirectory(dir) {\n  try {\n    var stat = fs.statSync(dir, {\n      throwIfNoEntry: false\n    });\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n  return !!stat && stat.isDirectory();\n};\nvar defaultRealpathSync = function realpathSync(x) {\n  try {\n    return realpathFS(x);\n  } catch (realpathErr) {\n    if (realpathErr.code !== 'ENOENT') {\n      throw realpathErr;\n    }\n  }\n  return x;\n};\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n  if (opts && opts.preserveSymlinks === false) {\n    return realpathSync(x);\n  }\n  return x;\n};\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n  var body = readFileSync(pkgfile);\n  try {\n    var pkg = JSON.parse(body);\n    return pkg;\n  } catch (jsonErr) {}\n};\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n  var dirs = nodeModulesPaths(start, opts, x);\n  for (var i = 0; i < dirs.length; i++) {\n    dirs[i] = path.join(dirs[i], x);\n  }\n  return dirs;\n};\nmodule.exports = function resolveSync(x, options) {\n  if (typeof x !== 'string') {\n    throw new TypeError('Path must be a string.');\n  }\n  var opts = normalizeOptions(x, options);\n  var isFile = opts.isFile || defaultIsFile;\n  var readFileSync = opts.readFileSync || fs.readFileSync;\n  var isDirectory = opts.isDirectory || defaultIsDir;\n  var realpathSync = opts.realpathSync || defaultRealpathSync;\n  var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n  if (opts.readFileSync && opts.readPackageSync) {\n    throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n  }\n  var packageIterator = opts.packageIterator;\n  var extensions = opts.extensions || ['.js'];\n  var includeCoreModules = opts.includeCoreModules !== false;\n  var basedir = opts.basedir || path.dirname(caller());\n  var parent = opts.filename || basedir;\n  opts.paths = opts.paths || defaultPaths();\n\n  // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n  var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n  if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)) {\n    var res = path.resolve(absoluteStart, x);\n    if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n    var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n    if (m) return maybeRealpathSync(realpathSync, m, opts);\n  } else if (includeCoreModules && isCore(x)) {\n    return x;\n  } else {\n    var n = loadNodeModulesSync(x, absoluteStart);\n    if (n) return maybeRealpathSync(realpathSync, n, opts);\n  }\n  var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n  function loadAsFileSync(x) {\n    var pkg = loadpkg(path.dirname(x));\n    if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n      var rfile = path.relative(pkg.dir, x);\n      var r = opts.pathFilter(pkg.pkg, x, rfile);\n      if (r) {\n        x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (isFile(x)) {\n      return x;\n    }\n    for (var i = 0; i < extensions.length; i++) {\n      var file = x + extensions[i];\n      if (isFile(file)) {\n        return file;\n      }\n    }\n  }\n  function loadpkg(dir) {\n    if (dir === '' || dir === '/') return;\n    if (process.platform === 'win32' && /^\\w:[/\\\\]*$/.test(dir)) {\n      return;\n    }\n    if (/[/\\\\]node_modules[/\\\\]*$/.test(dir)) return;\n    var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n    if (!isFile(pkgfile)) {\n      return loadpkg(path.dirname(dir));\n    }\n    var pkg = readPackageSync(readFileSync, pkgfile);\n    if (pkg && opts.packageFilter) {\n      // v2 will pass pkgfile\n      pkg = opts.packageFilter(pkg, /*pkgfile,*/dir); // eslint-disable-line spaced-comment\n    }\n\n    return {\n      pkg: pkg,\n      dir: dir\n    };\n  }\n  function loadAsDirectorySync(x) {\n    var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n    if (isFile(pkgfile)) {\n      try {\n        var pkg = readPackageSync(readFileSync, pkgfile);\n      } catch (e) {}\n      if (pkg && opts.packageFilter) {\n        // v2 will pass pkgfile\n        pkg = opts.packageFilter(pkg, /*pkgfile,*/x); // eslint-disable-line spaced-comment\n      }\n\n      if (pkg && pkg.main) {\n        if (typeof pkg.main !== 'string') {\n          var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n          mainError.code = 'INVALID_PACKAGE_MAIN';\n          throw mainError;\n        }\n        if (pkg.main === '.' || pkg.main === './') {\n          pkg.main = 'index';\n        }\n        try {\n          var m = loadAsFileSync(path.resolve(x, pkg.main));\n          if (m) return m;\n          var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n          if (n) return n;\n        } catch (e) {}\n      }\n    }\n    return loadAsFileSync(path.join(x, '/index'));\n  }\n  function loadNodeModulesSync(x, start) {\n    var thunk = function () {\n      return getPackageCandidates(x, start, opts);\n    };\n    var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n    for (var i = 0; i < dirs.length; i++) {\n      var dir = dirs[i];\n      if (isDirectory(path.dirname(dir))) {\n        var m = loadAsFileSync(dir);\n        if (m) return m;\n        var n = loadAsDirectorySync(dir);\n        if (n) return n;\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/resolve/lib/sync.js\n");

/***/ }),

/***/ "(instrument)/./node_modules/resolve/lib/core.json":
/*!********************************************!*\
  !*** ./node_modules/resolve/lib/core.json ***!
  \********************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"assert":true,"node:assert":[">= 14.18 && < 15",">= 16"],"assert/strict":">= 15","node:assert/strict":">= 16","async_hooks":">= 8","node:async_hooks":[">= 14.18 && < 15",">= 16"],"buffer_ieee754":">= 0.5 && < 0.9.7","buffer":true,"node:buffer":[">= 14.18 && < 15",">= 16"],"child_process":true,"node:child_process":[">= 14.18 && < 15",">= 16"],"cluster":">= 0.5","node:cluster":[">= 14.18 && < 15",">= 16"],"console":true,"node:console":[">= 14.18 && < 15",">= 16"],"constants":true,"node:constants":[">= 14.18 && < 15",">= 16"],"crypto":true,"node:crypto":[">= 14.18 && < 15",">= 16"],"_debug_agent":">= 1 && < 8","_debugger":"< 8","dgram":true,"node:dgram":[">= 14.18 && < 15",">= 16"],"diagnostics_channel":[">= 14.17 && < 15",">= 15.1"],"node:diagnostics_channel":[">= 14.18 && < 15",">= 16"],"dns":true,"node:dns":[">= 14.18 && < 15",">= 16"],"dns/promises":">= 15","node:dns/promises":">= 16","domain":">= 0.7.12","node:domain":[">= 14.18 && < 15",">= 16"],"events":true,"node:events":[">= 14.18 && < 15",">= 16"],"freelist":"< 6","fs":true,"node:fs":[">= 14.18 && < 15",">= 16"],"fs/promises":[">= 10 && < 10.1",">= 14"],"node:fs/promises":[">= 14.18 && < 15",">= 16"],"_http_agent":">= 0.11.1","node:_http_agent":[">= 14.18 && < 15",">= 16"],"_http_client":">= 0.11.1","node:_http_client":[">= 14.18 && < 15",">= 16"],"_http_common":">= 0.11.1","node:_http_common":[">= 14.18 && < 15",">= 16"],"_http_incoming":">= 0.11.1","node:_http_incoming":[">= 14.18 && < 15",">= 16"],"_http_outgoing":">= 0.11.1","node:_http_outgoing":[">= 14.18 && < 15",">= 16"],"_http_server":">= 0.11.1","node:_http_server":[">= 14.18 && < 15",">= 16"],"http":true,"node:http":[">= 14.18 && < 15",">= 16"],"http2":">= 8.8","node:http2":[">= 14.18 && < 15",">= 16"],"https":true,"node:https":[">= 14.18 && < 15",">= 16"],"inspector":">= 8","node:inspector":[">= 14.18 && < 15",">= 16"],"inspector/promises":[">= 19"],"node:inspector/promises":[">= 19"],"_linklist":"< 8","module":true,"node:module":[">= 14.18 && < 15",">= 16"],"net":true,"node:net":[">= 14.18 && < 15",">= 16"],"node-inspect/lib/_inspect":">= 7.6 && < 12","node-inspect/lib/internal/inspect_client":">= 7.6 && < 12","node-inspect/lib/internal/inspect_repl":">= 7.6 && < 12","os":true,"node:os":[">= 14.18 && < 15",">= 16"],"path":true,"node:path":[">= 14.18 && < 15",">= 16"],"path/posix":">= 15.3","node:path/posix":">= 16","path/win32":">= 15.3","node:path/win32":">= 16","perf_hooks":">= 8.5","node:perf_hooks":[">= 14.18 && < 15",">= 16"],"process":">= 1","node:process":[">= 14.18 && < 15",">= 16"],"punycode":">= 0.5","node:punycode":[">= 14.18 && < 15",">= 16"],"querystring":true,"node:querystring":[">= 14.18 && < 15",">= 16"],"readline":true,"node:readline":[">= 14.18 && < 15",">= 16"],"readline/promises":">= 17","node:readline/promises":">= 17","repl":true,"node:repl":[">= 14.18 && < 15",">= 16"],"smalloc":">= 0.11.5 && < 3","_stream_duplex":">= 0.9.4","node:_stream_duplex":[">= 14.18 && < 15",">= 16"],"_stream_transform":">= 0.9.4","node:_stream_transform":[">= 14.18 && < 15",">= 16"],"_stream_wrap":">= 1.4.1","node:_stream_wrap":[">= 14.18 && < 15",">= 16"],"_stream_passthrough":">= 0.9.4","node:_stream_passthrough":[">= 14.18 && < 15",">= 16"],"_stream_readable":">= 0.9.4","node:_stream_readable":[">= 14.18 && < 15",">= 16"],"_stream_writable":">= 0.9.4","node:_stream_writable":[">= 14.18 && < 15",">= 16"],"stream":true,"node:stream":[">= 14.18 && < 15",">= 16"],"stream/consumers":">= 16.7","node:stream/consumers":">= 16.7","stream/promises":">= 15","node:stream/promises":">= 16","stream/web":">= 16.5","node:stream/web":">= 16.5","string_decoder":true,"node:string_decoder":[">= 14.18 && < 15",">= 16"],"sys":[">= 0.4 && < 0.7",">= 0.8"],"node:sys":[">= 14.18 && < 15",">= 16"],"test/reporters":">= 19.9 && < 20.2","node:test/reporters":[">= 18.17 && < 19",">= 19.9",">= 20"],"node:test":[">= 16.17 && < 17",">= 18"],"timers":true,"node:timers":[">= 14.18 && < 15",">= 16"],"timers/promises":">= 15","node:timers/promises":">= 16","_tls_common":">= 0.11.13","node:_tls_common":[">= 14.18 && < 15",">= 16"],"_tls_legacy":">= 0.11.3 && < 10","_tls_wrap":">= 0.11.3","node:_tls_wrap":[">= 14.18 && < 15",">= 16"],"tls":true,"node:tls":[">= 14.18 && < 15",">= 16"],"trace_events":">= 10","node:trace_events":[">= 14.18 && < 15",">= 16"],"tty":true,"node:tty":[">= 14.18 && < 15",">= 16"],"url":true,"node:url":[">= 14.18 && < 15",">= 16"],"util":true,"node:util":[">= 14.18 && < 15",">= 16"],"util/types":">= 15.3","node:util/types":">= 16","v8/tools/arguments":">= 10 && < 12","v8/tools/codemap":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8/tools/consarray":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8/tools/csvparser":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8/tools/logreader":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8/tools/profile_view":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8/tools/splaytree":[">= 4.4 && < 5",">= 5.2 && < 12"],"v8":">= 1","node:v8":[">= 14.18 && < 15",">= 16"],"vm":true,"node:vm":[">= 14.18 && < 15",">= 16"],"wasi":[">= 13.4 && < 13.5",">= 18.17 && < 19",">= 20"],"node:wasi":[">= 18.17 && < 19",">= 20"],"worker_threads":">= 11.7","node:worker_threads":[">= 14.18 && < 15",">= 16"],"zlib":">= 0.5","node:zlib":[">= 14.18 && < 15",">= 16"]}');

/***/ })

};
;