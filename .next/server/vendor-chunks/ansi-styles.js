"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ansi-styles";
exports.ids = ["vendor-chunks/ansi-styles"];
exports.modules = {

/***/ "(instrument)/./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n  const code = fn(...args);\n  return `\\u001B[${code + offset}m`;\n};\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n  const code = fn(...args);\n  return `\\u001B[${38 + offset};5;${code}m`;\n};\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n  const rgb = fn(...args);\n  return `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\nconst setLazyProperty = (object, property, get) => {\n  Object.defineProperty(object, property, {\n    get: () => {\n      const value = get();\n      Object.defineProperty(object, property, {\n        value,\n        enumerable: true,\n        configurable: true\n      });\n      return value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n  if (colorConvert === undefined) {\n    colorConvert = __webpack_require__(/*! color-convert */ \"(instrument)/./node_modules/color-convert/index.js\");\n  }\n  const offset = isBackground ? 10 : 0;\n  const styles = {};\n  for (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n    const name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n    if (sourceSpace === targetSpace) {\n      styles[name] = wrap(identity, offset);\n    } else if (typeof suite === 'object') {\n      styles[name] = wrap(suite[targetSpace], offset);\n    }\n  }\n  return styles;\n};\nfunction assembleStyles() {\n  const codes = new Map();\n  const styles = {\n    modifier: {\n      reset: [0, 0],\n      // 21 isn't widely supported and 22 does the same thing\n      bold: [1, 22],\n      dim: [2, 22],\n      italic: [3, 23],\n      underline: [4, 24],\n      inverse: [7, 27],\n      hidden: [8, 28],\n      strikethrough: [9, 29]\n    },\n    color: {\n      black: [30, 39],\n      red: [31, 39],\n      green: [32, 39],\n      yellow: [33, 39],\n      blue: [34, 39],\n      magenta: [35, 39],\n      cyan: [36, 39],\n      white: [37, 39],\n      // Bright color\n      blackBright: [90, 39],\n      redBright: [91, 39],\n      greenBright: [92, 39],\n      yellowBright: [93, 39],\n      blueBright: [94, 39],\n      magentaBright: [95, 39],\n      cyanBright: [96, 39],\n      whiteBright: [97, 39]\n    },\n    bgColor: {\n      bgBlack: [40, 49],\n      bgRed: [41, 49],\n      bgGreen: [42, 49],\n      bgYellow: [43, 49],\n      bgBlue: [44, 49],\n      bgMagenta: [45, 49],\n      bgCyan: [46, 49],\n      bgWhite: [47, 49],\n      // Bright color\n      bgBlackBright: [100, 49],\n      bgRedBright: [101, 49],\n      bgGreenBright: [102, 49],\n      bgYellowBright: [103, 49],\n      bgBlueBright: [104, 49],\n      bgMagentaBright: [105, 49],\n      bgCyanBright: [106, 49],\n      bgWhiteBright: [107, 49]\n    }\n  };\n\n  // Alias bright black as gray (and grey)\n  styles.color.gray = styles.color.blackBright;\n  styles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n  styles.color.grey = styles.color.blackBright;\n  styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n  for (const [groupName, group] of Object.entries(styles)) {\n    for (const [styleName, style] of Object.entries(group)) {\n      styles[styleName] = {\n        open: `\\u001B[${style[0]}m`,\n        close: `\\u001B[${style[1]}m`\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n  }\n  Object.defineProperty(styles, 'codes', {\n    value: codes,\n    enumerable: false\n  });\n  styles.color.close = '\\u001B[39m';\n  styles.bgColor.close = '\\u001B[49m';\n  setLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n  setLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n  setLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n  setLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n  setLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n  setLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n  return styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n  enumerable: true,\n  get: assembleStyles\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/./node_modules/ansi-styles/index.js\n");

/***/ })

};
;