name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint Code
      run: npm run lint
    
    - name: Run Unit Tests
      run: npm run test
      
    - name: Run Integration Tests
      run: npm run test:integration
    
    - name: Build Project
      run: npm run build
    
    - name: Run Performance Tests
      run: npm run test:performance
    
    - name: Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test

  security-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  deployment-readiness:
    needs: [build-and-test, security-analysis]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Staging
      if: github.ref == 'refs/heads/develop'
      run: |
        # Add staging deployment script
        echo "Deploying to staging environment"
    
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: |
        # Add production deployment script
        echo "Deploying to production environment"
