name: Sentry Release

on:
  push:
    branches:
      - main
      - develop

jobs:
  sentry-release:
    name: Sentry Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensures full git history for versioning

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Sentry CLI
      run: npm install -g @sentry/cli

    - name: Create Sentry Release
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      run: |
        # Generate a unique release identifier
        export SENTRY_RELEASE=$(git rev-parse HEAD)
        
        # Create a new release
        sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
        
        # Associate commits with the release
        sentry-cli releases set-commits $SENTRY_RELEASE --auto
        
        # Build the project
        npm run build
        
        # Upload source maps
        sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps ./out/_next/static/chunks
        
        # Finalize the release
        sentry-cli releases finalize $SENTRY_RELEASE

    - name: Notify Sentry of Deployment
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      run: |
        sentry-cli releases deploys $SENTRY_RELEASE new \
          -e ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}